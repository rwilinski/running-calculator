{"version":3,"sources":["components/Summary/Summary.js","helpers/TimeHelper/TimeHelper.js","components/TimePicker/TimePicker.js","helpers/DisplayHelper/DisplayHelper.js","components/DistanceCalculator/DistanceCalculator.js","components/DistancePicker/DistancePicker.js","components/DistanceTable/DistanceTable.js","components/PaceCalculator/PaceCalculator.js","components/TimeCalculator/TimeCalculator.js","components/App/App.js","serviceWorker.js","index.js"],"names":["Summary","_this$props","this","props","classes","data","cols","length","react_default","a","createElement","Grid","container","spacing","map","row","key","label","item","xs","sm","Paper","elevation","className","summaryPaper","Typography","variant","text","React","Component","withStyles","theme","padding","backgroundColor","palette","secondary","main","color","common","white","textAlign","secondsToTime","value","arguments","undefined","hours","Math","floor","hoursRemainder","minutes","seconds","round","timeToSeconds","_ref","parseInt","calculateSpeed","time","toFixed","calculatePace","distance","TimePicker","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","onChange","bind","assertThisInitialized","_this2","target","setState","defineProperty","name","inputName","_this3","newVal","_this4","asPace","Fragment","gridItem","IconButton","tabIndex","onClick","updateInput","KeyboardArrowUp_default","TextField","type","placeholder","InputProps","inputProps","min","fullWidth","disabled","KeyboardArrowDown_default","max","display","flexDirection","alignItems","justifyContent","pad","size","String","padStart","displayTime","hideEmptyHours","concat","displayDistance","valueFloor","km","m","filter","Boolean","join","DistanceCalculator","pace","calculate","gutterBottom","paragraph","InputLabel","components_TimePicker_TimePicker","onUpdate","components_Summary_Summary","DistancePicker","distances","onInputChange","setDistance","margin","chipsContainer","Chip","chip","marginBottom","DistanceTable","rows","Array","fill","x","i","toConsumableArray","Table","TableHead","TableRow","TableCell","TableBody","hover","selected","muted","grey","PaceCalculator","speed","components_DistancePicker_DistancePicker","ExpansionPanel","expansionPanel","ExpansionPanelSummary","expandIcon","ExpandMore_default","ExpansionPanelDetails","components_DistanceTable_DistanceTable","marginTop","TimeCalculator","createMuiTheme","primary","blue","orange","typography","useNextVariants","App","MuiThemeProvider","CssBaseline","AppBar","position","Toolbar","Container","maxWidth","contentPaper","components_PaceCalculator_PaceCalculator","components_TimeCalculator_TimeCalculator","components_DistanceCalculator_DistanceCalculator","@global",".hideInputArrows","&::-webkit-clear-button, &::-webkit-outer-spin-button, &::-webkit-inner-spin-button","-webkit-appearance",".textCenter","window","location","hostname","match","ReactDOM","render","components_App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5a5be855.chunk.js","sourcesContent":["import React from 'react';\n\nimport { withStyles } from '@material-ui/core';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = theme => ({\n  summaryPaper: {\n    padding: theme.spacing(),\n    backgroundColor: theme.palette.secondary.main,\n    color: theme.palette.common.white,\n    textAlign: 'center'\n  }\n});\n\nclass Summary extends React.Component {\n  render() {\n    const { classes, data } = this.props;\n    const cols = 12 / data.length;\n\n    return (\n      <Grid container spacing={2}>\n        {data.map(row => (\n          <Grid key={row.label} item xs={12} sm={cols}>\n            <Paper elevation={0} className={classes.summaryPaper}>\n              <Typography variant=\"h6\">{row.label}</Typography>\n              <Typography variant=\"h4\">{row.text}</Typography>\n            </Paper>\n          </Grid>\n        ))}\n      </Grid>\n    );\n  }\n}\n\nexport default withStyles(styles)(Summary);\n","export function secondsToTime(value = 0) {\n  const hours = Math.floor(value / 3600);\n  const hoursRemainder = value - hours * 3600;\n  const minutes = Math.floor(hoursRemainder / 60);\n  const seconds = Math.round(hoursRemainder - minutes * 60);\n\n  return {\n    hours,\n    minutes,\n    seconds\n  };\n}\n\nexport function timeToSeconds({ hours, minutes, seconds } = {}) {\n  return (\n    parseInt(hours || 0) * 3600 +\n    parseInt(minutes || 0) * 60 +\n    parseInt(seconds || 0)\n  );\n}\n\nexport function calculateSpeed(time = 0, distance = 0) {\n  const hours = time / 3600;\n  const km = distance / 1000;\n\n  return (km / (hours || 1)).toFixed(2);\n}\n\nexport function calculatePace(time = 0, distance = 0) {\n  return Math.floor((1000 * time) / (distance || 1));\n}\n","import React from 'react';\n\nimport { withStyles } from '@material-ui/core';\nimport Grid from '@material-ui/core/Grid';\nimport IconButton from '@material-ui/core/IconButton';\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\n\nimport {\n  secondsToTime,\n  timeToSeconds\n} from './../../helpers/TimeHelper/TimeHelper';\n\nconst styles = theme => ({\n  gridItem: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});\n\nclass TimePicker extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = secondsToTime(props.value);\n\n    this.onChange = this.onChange.bind(this);\n  }\n\n  onChange({ target }) {\n    this.setState(\n      {\n        [target.name]: target.value\n      },\n      () => {\n        const seconds = timeToSeconds(this.state);\n\n        this.props.onChange(seconds);\n      }\n    );\n  }\n\n  updateInput(inputName, type = 'increment') {\n    const newVal =\n      type === 'increment'\n        ? parseInt(this.state[inputName] || 0) + 1\n        : parseInt(this.state[inputName] || 0) - 1;\n\n    this.setState(\n      {\n        [inputName]: newVal\n      },\n      () => {\n        const seconds = timeToSeconds(this.state);\n\n        this.props.onChange(seconds);\n      }\n    );\n  }\n\n  render() {\n    const { asPace, classes } = this.props;\n\n    return (\n      <Grid container spacing={2}>\n        {!asPace && (\n          <>\n            <Grid item xs className={classes.gridItem}>\n              <IconButton\n                tabIndex=\"-1\"\n                color=\"primary\"\n                onClick={() => this.updateInput('hours')}\n              >\n                <KeyboardArrowUpIcon />\n              </IconButton>\n              <TextField\n                type=\"number\"\n                placeholder=\"hours\"\n                name=\"hours\"\n                InputProps={{\n                  inputProps: {\n                    min: 0,\n                    className: 'hideInputArrows textCenter'\n                  }\n                }}\n                fullWidth\n                value={this.state.hours}\n                onChange={this.onChange}\n                variant=\"outlined\"\n              />\n              <IconButton\n                tabIndex=\"-1\"\n                color=\"primary\"\n                onClick={() => this.updateInput('hours', 'decrement')}\n                disabled={this.state.hours <= 0}\n              >\n                <KeyboardArrowDownIcon />\n              </IconButton>\n            </Grid>\n            <Grid item className={classes.gridItem}>\n              <Typography variant=\"h6\">:</Typography>\n            </Grid>\n          </>\n        )}\n        <Grid item xs className={classes.gridItem}>\n          <IconButton\n            tabIndex=\"-1\"\n            color=\"primary\"\n            onClick={() => this.updateInput('minutes')}\n            disabled={this.state.minutes >= 59}\n          >\n            <KeyboardArrowUpIcon />\n          </IconButton>\n          <TextField\n            type=\"number\"\n            placeholder=\"minutes\"\n            name=\"minutes\"\n            InputProps={{\n              inputProps: {\n                min: 0,\n                max: 59,\n                className: 'hideInputArrows textCenter'\n              }\n            }}\n            fullWidth\n            value={this.state.minutes}\n            onChange={this.onChange}\n            variant=\"outlined\"\n          />\n          <IconButton\n            tabIndex=\"-1\"\n            color=\"primary\"\n            onClick={() => this.updateInput('minutes', 'decrement')}\n            disabled={this.state.minutes <= 0}\n          >\n            <KeyboardArrowDownIcon />\n          </IconButton>\n        </Grid>\n        <Grid item className={classes.gridItem}>\n          <Typography variant=\"h6\">:</Typography>\n        </Grid>\n        <Grid item xs className={classes.gridItem}>\n          <IconButton\n            tabIndex=\"-1\"\n            color=\"primary\"\n            onClick={() => this.updateInput('seconds')}\n            disabled={this.state.seconds >= 59}\n          >\n            <KeyboardArrowUpIcon />\n          </IconButton>\n          <TextField\n            type=\"number\"\n            placeholder=\"seconds\"\n            name=\"seconds\"\n            InputProps={{\n              inputProps: {\n                min: 0,\n                max: 59,\n                className: 'hideInputArrows textCenter'\n              }\n            }}\n            fullWidth\n            value={this.state.seconds}\n            onChange={this.onChange}\n            variant=\"outlined\"\n          />\n          <IconButton\n            tabIndex=\"-1\"\n            color=\"primary\"\n            onClick={() => this.updateInput('seconds', 'decrement')}\n            disabled={this.state.seconds <= 0}\n          >\n            <KeyboardArrowDownIcon />\n          </IconButton>\n        </Grid>\n      </Grid>\n    );\n  }\n}\n\nexport default withStyles(styles)(TimePicker);\n","import { secondsToTime } from '../TimeHelper/TimeHelper';\n\nexport function pad(value = '', size = 2) {\n  return String(value).padStart(size, '0');\n}\n\nexport function displayTime(value, hideEmptyHours = false) {\n  if (typeof value === 'number') {\n    value = secondsToTime(value);\n  }\n\n  if (hideEmptyHours && !value.hours) {\n    return `${pad(value.minutes)}:${pad(value.seconds)}`;\n  }\n\n  return `${pad(value.hours)}:${pad(value.minutes)}:${pad(value.seconds)}`;\n}\n\nexport function displayDistance(value) {\n  const valueFloor = Math.floor(value);\n\n  if (!value || !valueFloor) {\n    return `0 m`;\n  }\n\n  const km = Math.floor(valueFloor / 1000);\n  const m = valueFloor - km * 1000;\n\n  return [km ? `${km} km` : null, m ? `${m} m` : null]\n    .filter(Boolean)\n    .join(' ');\n}\n","import React, { Component } from 'react';\n\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Typography from '@material-ui/core/Typography';\n\nimport Summary from '../Summary/Summary';\nimport TimePicker from '../TimePicker/TimePicker';\nimport { displayDistance } from '../../helpers/DisplayHelper/DisplayHelper';\n\nclass DistanceCalculator extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      pace: 360,\n      time: 1800,\n      distance: 0\n    };\n  }\n\n  onUpdate(key, data) {\n    this.setState(\n      {\n        [key]: data\n      },\n      () => {\n        this.calculate();\n      }\n    );\n  }\n\n  calculate() {\n    this.setState({\n      distance: this.state.pace ? (this.state.time / this.state.pace) * 1000 : 0\n    });\n  }\n\n  componentDidMount() {\n    this.calculate();\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <Typography variant=\"h4\" gutterBottom>\n          Distance calculator\n        </Typography>\n        <Typography variant=\"body1\" paragraph={true}>\n          Provide your pace and planned time to calculate your target distance.\n        </Typography>\n\n        <InputLabel>Pace (m:s)</InputLabel>\n        <TimePicker\n          asPace\n          value={this.state.pace}\n          onChange={value => this.onUpdate('pace', value)}\n        />\n\n        <InputLabel>Time (h:m:s)</InputLabel>\n        <TimePicker\n          value={this.state.time}\n          onChange={value => this.onUpdate('time', value)}\n        />\n\n        <Summary\n          data={[\n            {\n              label: 'Distance',\n              text: displayDistance(this.state.distance)\n            }\n          ]}\n        />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default DistanceCalculator;\n","import React from 'react';\nimport { withStyles } from '@material-ui/core';\nimport Chip from '@material-ui/core/Chip';\nimport TextField from '@material-ui/core/TextField';\nimport { displayDistance } from '../../helpers/DisplayHelper/DisplayHelper';\n\nconst styles = theme => ({\n  chipsContainer: {\n    textAlign: 'center',\n    marginBottom: theme.spacing(3)\n  },\n  chip: {\n    margin: theme.spacing(0.5)\n  }\n});\n\nclass DistancePicker extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      distance: props.value\n    };\n\n    this.onInputChange = this.onInputChange.bind(this);\n  }\n\n  distances = [\n    {\n      name: displayDistance(1000),\n      value: 1000\n    },\n    {\n      name: displayDistance(2000),\n      value: 2000\n    },\n    {\n      name: displayDistance(5000),\n      value: 5000\n    },\n    {\n      name: displayDistance(10000),\n      value: 10000\n    },\n    {\n      name: 'Halfmarathon',\n      value: 21097\n    },\n    {\n      name: 'Marathon',\n      value: 42195\n    }\n  ];\n\n  onInputChange({ target }) {\n    this.setDistance(target.value);\n  }\n\n  setDistance(distance) {\n    this.setState({ distance }, () => {\n      this.props.onChange(parseInt(this.state.distance || 0));\n    });\n  }\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <React.Fragment>\n        <TextField\n          type=\"number\"\n          placeholder=\"meters\"\n          min=\"0\"\n          fullWidth\n          value={this.state.distance}\n          onChange={this.onInputChange}\n          margin=\"normal\"\n          variant=\"outlined\"\n          InputProps={{\n            inputProps: {\n              min: 0,\n              name: 'distance',\n              className: 'hideInputArrows textCenter'\n            }\n          }}\n        />\n\n        <div className={classes.chipsContainer}>\n          {this.distances.map(item => (\n            <Chip\n              color=\"primary\"\n              variant=\"outlined\"\n              label={item.name}\n              key={item.value}\n              onClick={() => this.setDistance(item.value)}\n              className={classes.chip}\n            />\n          ))}\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default withStyles(styles)(DistancePicker);\n","import React, { Component } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport { displayTime, displayDistance } from '../../helpers/DisplayHelper/DisplayHelper';\nimport { calculatePace } from '../../helpers/TimeHelper/TimeHelper';\n\nconst styles = theme => ({\n  muted: {\n    color: theme.palette.grey[500]\n  }\n});\n\nclass DistanceTable extends Component {\n  render() {\n    const { classes } = this.props;\n    const pace = calculatePace(this.props.time, this.props.distance);\n    const km = Math.floor(this.props.distance / 1000) || 0;\n\n    let rows = Array(km)\n      .fill(null)\n      .map((x, i) => (i + 1) * 1000);\n\n    if (this.props.distance > km * 1000) {\n      rows = [...rows, this.props.distance];\n    }\n\n    return (\n      <Table>\n        <TableHead>\n          <TableRow>\n            <TableCell>Split</TableCell>\n            <TableCell>Elapsed time</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows.map((km, i) => (\n            <TableRow key={km} hover selected={(i + 1) % 5 === 0}>\n              <TableCell>\n                {displayDistance(km)}\n                {i === rows.length - 1 && (\n                  <span className={classes.muted}> (Finish)</span>\n                )}\n              </TableCell>\n              <TableCell>{displayTime(pace * (km / 1000))}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    );\n  }\n}\n\nexport default withStyles(styles)(DistanceTable);\n","import React, { Component } from 'react';\n\nimport { withStyles } from '@material-ui/core';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Typography from '@material-ui/core/Typography';\n\nimport DistancePicker from '../DistancePicker/DistancePicker';\nimport DistanceTable from '../DistanceTable/DistanceTable';\nimport Summary from '../Summary/Summary';\nimport TimePicker from '../TimePicker/TimePicker';\nimport { displayTime } from '../../helpers/DisplayHelper/DisplayHelper';\nimport {\n  calculatePace,\n  calculateSpeed\n} from '../../helpers/TimeHelper/TimeHelper';\n\nconst styles = theme => ({\n  expansionPanel: {\n    marginTop: theme.spacing(3)\n  }\n});\n\nclass PaceCalculator extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      distance: 1000,\n      time: 360,\n      speed: 0,\n      pace: 0\n    };\n  }\n\n  onUpdate(key, data) {\n    this.setState(\n      {\n        [key]: data\n      },\n      () => {\n        this.calculate();\n      }\n    );\n  }\n\n  calculate() {\n    this.setState({\n      speed: calculateSpeed(this.state.time, this.state.distance),\n      pace: calculatePace(this.state.time, this.state.distance)\n    });\n  }\n\n  componentDidMount() {\n    this.calculate();\n  }\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <React.Fragment>\n        <Typography variant=\"h4\" gutterBottom>\n          Pace calculator\n        </Typography>\n        <Typography variant=\"body1\" paragraph={true}>\n          This calculator helps you to determine what is the necessary speed and\n          pace of your run to achieve the planned result at a given distance.\n          Below you will find a table with calculated splits for your goal\n          finishing time.\n        </Typography>\n\n        <InputLabel>Expected time (h:m:s)</InputLabel>\n        <TimePicker\n          value={this.state.time}\n          onChange={value => this.onUpdate('time', value)}\n        />\n\n        <InputLabel>Distance (meters)</InputLabel>\n        <DistancePicker\n          value={this.state.distance}\n          onChange={value => this.onUpdate('distance', value)}\n        />\n\n        <Summary\n          data={[\n            {\n              label: 'Speed',\n              text: `${this.state.speed} km/h`\n            },\n            {\n              label: 'Pace',\n              text: `${displayTime(this.state.pace, true)} min/km`\n            }\n          ]}\n        />\n\n        <ExpansionPanel className={classes.expansionPanel}>\n          <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n            <Typography>Your target split times:</Typography>\n          </ExpansionPanelSummary>\n          <ExpansionPanelDetails>\n            <DistanceTable\n              time={this.state.time}\n              distance={this.state.distance}\n            />\n          </ExpansionPanelDetails>\n        </ExpansionPanel>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default withStyles(styles)(PaceCalculator);\n","import React, { Component } from 'react';\n\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Typography from '@material-ui/core/Typography';\n\nimport DistancePicker from './../DistancePicker/DistancePicker';\nimport TimePicker from './../TimePicker/TimePicker';\nimport Summary from './../Summary/Summary';\nimport { displayTime } from '../../helpers/DisplayHelper/DisplayHelper';\nimport { secondsToTime } from '../../helpers/TimeHelper/TimeHelper';\n\nclass TimeCalculator extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      pace: 360,\n      distance: 1000,\n      time: 0\n    };\n  }\n\n  onUpdate(key, data) {\n    this.setState(\n      {\n        [key]: data\n      },\n      () => {\n        this.calculate();\n      }\n    );\n  }\n\n  calculate() {\n    this.setState({\n      time: secondsToTime(this.state.pace * (this.state.distance / 1000))\n    });\n  }\n\n  componentDidMount() {\n    this.calculate();\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <Typography variant=\"h4\" gutterBottom>\n          Time calculator\n        </Typography>\n        <Typography variant=\"body1\" paragraph={true}>\n          Provide your pace and planned distance to calculate your finish time.\n        </Typography>\n\n        <InputLabel>Pace (m:s)</InputLabel>\n        <TimePicker\n          asPace\n          value={this.state.pace}\n          onChange={value => this.onUpdate('pace', value)}\n        />\n\n        <InputLabel>Distance (meters)</InputLabel>\n        <DistancePicker\n          value={this.state.distance}\n          onChange={value => this.onUpdate('distance', value)}\n        />\n\n        <Summary\n          data={[\n            {\n              label: 'Time',\n              text: displayTime(this.state.time)\n            }\n          ]}\n        />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default TimeCalculator;\n","import React, { Component } from 'react';\n\nimport 'typeface-roboto';\n\nimport { withStyles } from '@material-ui/core';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport blue from '@material-ui/core/colors/blue';\nimport orange from '@material-ui/core/colors/orange';\nimport AppBar from '@material-ui/core/AppBar';\nimport Container from '@material-ui/core/Container';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Paper from '@material-ui/core/Paper';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n\nimport DistanceCalculator from './../DistanceCalculator/DistanceCalculator';\nimport PaceCalculator from './../PaceCalculator/PaceCalculator';\nimport TimeCalculator from './../TimeCalculator/TimeCalculator';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: blue,\n    secondary: orange\n  },\n  typography: {\n    useNextVariants: true\n  }\n});\n\nconst styles = theme => ({\n  '@global': {\n    '.hideInputArrows': {\n      '&::-webkit-clear-button, &::-webkit-outer-spin-button, &::-webkit-inner-spin-button': {\n        '-webkit-appearance': 'none',\n        display: 'none'\n      }\n    },\n    '.textCenter': {\n      textAlign: 'center'\n    }\n  },\n  contentPaper: {\n    padding: theme.spacing(2),\n    margin: theme.spacing(3, 0)\n  }\n});\n\nclass App extends Component {\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <MuiThemeProvider theme={theme}>\n        <CssBaseline />\n\n        <AppBar position=\"static\">\n          <Toolbar>\n            <Typography variant=\"h6\" color=\"inherit\">\n              Running Calculators\n            </Typography>\n          </Toolbar>\n        </AppBar>\n\n        <Container maxWidth=\"md\">\n          <Paper className={classes.contentPaper}>\n            <PaceCalculator />\n          </Paper>\n\n          <Paper className={classes.contentPaper}>\n            <TimeCalculator />\n          </Paper>\n          <Paper className={classes.contentPaper}>\n            <DistanceCalculator />\n          </Paper>\n        </Container>\n      </MuiThemeProvider>\n    );\n  }\n}\n\nexport default withStyles(styles)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}